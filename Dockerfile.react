# Multi-stage build for React frontend + Node.js backend
FROM node:18-alpine AS frontend-builder

# Install OpenSSL and other dependencies
RUN apk add --no-cache openssl openssl-dev libc6-compat

WORKDIR /app/frontend

# Set memory limits for frontend build
ENV NODE_OPTIONS="--max-old-space-size=512"
ENV GENERATE_SOURCEMAP=false
ENV REACT_APP_API_URL=https://wangov-production.up.railway.app

# Copy frontend package files
COPY wangov-id/frontend/package*.json ./

# Install frontend dependencies
RUN npm install --no-audit --no-fund

# Copy frontend source
COPY wangov-id/frontend/ ./

# Build React app
RUN npm run build

# Backend stage
FROM node:18-alpine AS backend-builder

# Install OpenSSL and other dependencies
RUN apk add --no-cache openssl openssl-dev libc6-compat

WORKDIR /app

# Set memory limits
ENV NODE_OPTIONS="--max-old-space-size=512"
ENV NODE_ENV=production

# Copy backend package files
COPY wangov-id/package*.json ./

# Install backend dependencies
RUN npm install --include=dev --no-audit --no-fund

# Copy backend source
COPY wangov-id/ ./

# Generate Prisma client
RUN npx prisma generate

# Build backend
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Install OpenSSL and other dependencies
RUN apk add --no-cache openssl openssl-dev libc6-compat

WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 wangov && \
    adduser --system --uid 1001 wangov

# Copy backend build
COPY --from=backend-builder --chown=wangov:wangov /app/dist ./dist
COPY --from=backend-builder --chown=wangov:wangov /app/node_modules ./node_modules
COPY --from=backend-builder --chown=wangov:wangov /app/package.json ./package.json
COPY --from=backend-builder --chown=wangov:wangov /app/prisma ./prisma

# Copy React build to public directory
COPY --from=frontend-builder --chown=wangov:wangov /app/frontend/dist ./public

USER wangov

EXPOSE 3000

ENV NODE_ENV=production

CMD ["node", "dist/index.js"]
